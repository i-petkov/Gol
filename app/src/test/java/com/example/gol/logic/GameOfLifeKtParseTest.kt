package com.example.gol.logic

import org.junit.Test
import kotlin.random.Random

class GameOfLifeKtParseTest {

    private val seed = """
        #________________________*___________
        #______________________*_*___________
        #____________**______**____________**
        #___________*___*____**____________**
        #**________*_____*___**______________
        #**________*___*_**____*_*___________
        #__________*_____*_______*___________
        #___________*___*____________________
        #____________**______________________
    """.trimMargin("#")
    
    private val expected = listOf(
        listOf('_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','*','_','_','_','_','_','_','_','_','_','_','_'),
        listOf('_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','*','_','*','_','_','_','_','_','_','_','_','_','_','_'),
        listOf('_','_','_','_','_','_','_','_','_','_','_','_','*','*','_','_','_','_','_','_','*','*','_','_','_','_','_','_','_','_','_','_','_','_','*','*'),
        listOf('_','_','_','_','_','_','_','_','_','_','_','*','_','_','_','*','_','_','_','_','*','*','_','_','_','_','_','_','_','_','_','_','_','_','*','*'),
        listOf('*','*','_','_','_','_','_','_','_','_','*','_','_','_','_','_','*','_','_','_','*','*','_','_','_','_','_','_','_','_','_','_','_','_','_','_'),
        listOf('*','*','_','_','_','_','_','_','_','_','*','_','_','_','*','_','*','*','_','_','_','_','*','_','*','_','_','_','_','_','_','_','_','_','_','_'),
        listOf('_','_','_','_','_','_','_','_','_','_','*','_','_','_','_','_','*','_','_','_','_','_','_','_','*','_','_','_','_','_','_','_','_','_','_','_'),
        listOf('_','_','_','_','_','_','_','_','_','_','_','*','_','_','_','*','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_'),
        listOf('_','_','_','_','_','_','_','_','_','_','_','_','*','*','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_','_')
    )

    @Test
    fun parsAs2DList() {
        val actual = seed.parsAs2DList { it }
        assert(expected.contentDeepEquals(actual)) {
            """
                #parsAs2DList
                #
                #expexted: ${expected.joinToString { it.joinToString(prefix = "[", postfix = "]") }}
                #
                #actual: ${actual.joinToString { it.joinToString(prefix = "[", postfix = "]") }}
            """.trimMargin("#")
        }
    }

}